@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 210 20% 98%;

  --foreground: 210 24% 16%;

  --border: 210 15% 89%;

  --card: 0 0% 100%;

  --card-foreground: 210 24% 16%;

  --card-border: 210 12% 92%;

  --sidebar: 210 20% 96%;

  --sidebar-foreground: 210 24% 16%;

  --sidebar-border: 210 15% 91%;

  --sidebar-primary: 205 100% 36%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 205 85% 97%;

  --sidebar-accent-foreground: 205 100% 25%;

  --sidebar-ring: 205 100% 36%;

  --popover: 0 0% 100%;

  --popover-foreground: 210 24% 16%;

  --popover-border: 210 12% 92%;

  --primary: 205 100% 36%;

  --primary-foreground: 0 0% 98%;

  --secondary: 210 15% 94%;

  --secondary-foreground: 210 24% 16%;

  --muted: 210 15% 96%;

  --muted-foreground: 210 15% 45%;

  --accent: 205 85% 97%;

  --accent-foreground: 205 100% 25%;

  --destructive: 354 70% 54%;

  --destructive-foreground: 0 0% 98%;

  --input: 210 15% 85%;
  --ring: 205 100% 36%;
  --chart-1: 205 100% 36%;
  --chart-2: 134 61% 41%;
  --chart-3: 354 70% 54%;
  --chart-4: 39 100% 50%;
  --chart-5: 270 95% 50%;

  --font-sans: Inter, Roboto, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(210 15% 89% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(210 15% 89% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(210 15% 89% / 0.00), 0px 1px 2px -1px hsl(210 15% 89% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(210 15% 89% / 0.00), 0px 1px 2px -1px hsl(210 15% 89% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(210 15% 89% / 0.00), 0px 2px 4px -1px hsl(210 15% 89% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(210 15% 89% / 0.00), 0px 4px 6px -1px hsl(210 15% 89% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(210 15% 89% / 0.00), 0px 8px 10px -1px hsl(210 15% 89% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(210 15% 89% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 210 20% 8%;

  --foreground: 210 20% 88%;

  --border: 210 15% 18%;

  --card: 210 18% 11%;

  --card-foreground: 210 20% 88%;

  --card-border: 210 15% 21%;

  --sidebar: 210 18% 6%;

  --sidebar-foreground: 210 20% 88%;

  --sidebar-border: 210 15% 16%;

  --sidebar-primary: 205 100% 36%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 205 85% 8%;

  --sidebar-accent-foreground: 205 85% 75%;

  --sidebar-ring: 205 100% 36%;

  --popover: 210 18% 14%;

  --popover-foreground: 210 20% 88%;

  --popover-border: 210 15% 24%;

  --primary: 205 100% 36%;

  --primary-foreground: 0 0% 98%;

  --secondary: 210 15% 20%;

  --secondary-foreground: 210 20% 88%;

  --muted: 210 15% 16%;

  --muted-foreground: 210 15% 65%;

  --accent: 205 85% 15%;

  --accent-foreground: 205 85% 75%;

  --destructive: 354 70% 54%;

  --destructive-foreground: 0 0% 98%;

  --input: 210 15% 25%;
  --ring: 205 100% 36%;
  --chart-1: 205 100% 65%;
  --chart-2: 134 61% 65%;
  --chart-3: 354 70% 75%;
  --chart-4: 39 100% 70%;
  --chart-5: 270 95% 75%;

  --shadow-2xs: 0px 2px 0px 0px hsl(210 15% 5% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(210 15% 5% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(210 15% 5% / 0.00), 0px 1px 2px -1px hsl(210 15% 5% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(210 15% 5% / 0.00), 0px 1px 2px -1px hsl(210 15% 5% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(210 15% 5% / 0.00), 0px 2px 4px -1px hsl(210 15% 5% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(210 15% 5% / 0.00), 0px 4px 6px -1px hsl(210 15% 5% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(210 15% 5% / 0.00), 0px 8px 10px -1px hsl(210 15% 5% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(210 15% 5% / 0.00);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Custom animations for MTF Detection Dashboard */
  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0.7; }
  }

  @keyframes fade-in-right {
    0% {
      opacity: 0;
      transform: translateX(20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes slide-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
    }
    50% {
      box-shadow: 0 0 0 8px rgba(59, 130, 246, 0);
    }
  }

  .animate-fade-in-right {
    animation: fade-in-right 0.6s ease-out;
  }

  .animate-slide-in-up {
    animation: slide-in-up 0.5s ease-out;
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s infinite;
  }

  /* Report Import Hub animations */
  @keyframes slide-in-up {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes sync-pulse {
    0%, 100% {
      box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
    }
    50% {
      box-shadow: 0 0 0 8px rgba(59, 130, 246, 0);
    }
  }

  @keyframes report-import {
    0% {
      opacity: 0;
      transform: translateX(-20px) scale(0.95);
    }
    50% {
      opacity: 0.8;
      transform: translateX(0) scale(1.02);
    }
    100% {
      opacity: 1;
      transform: translateX(0) scale(1);
    }
  }

  .animate-slide-in-up {
    animation: slide-in-up 0.5s ease-out;
  }

  .animate-sync-pulse {
    animation: sync-pulse 2s infinite;
  }

  .animate-report-import {
    animation: report-import 0.6s ease-out;
  }

  .sync-card {
    transition: all 0.3s ease;
  }

  .sync-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  /* Batch Processing Monitor animations */
  @keyframes processing-pulse {
    0%, 100% {
      opacity: 1;
      transform: scale(1);
    }
    50% {
      opacity: 0.7;
      transform: scale(1.05);
    }
  }

  @keyframes progress-fill {
    0% {
      width: 0%;
    }
    100% {
      width: var(--progress-width);
    }
  }

  @keyframes metric-update {
    0% {
      transform: scale(1);
      color: inherit;
    }
    50% {
      transform: scale(1.1);
      color: #10b981;
    }
    100% {
      transform: scale(1);
      color: inherit;
    }
  }

  .animate-processing-pulse {
    animation: processing-pulse 2s ease-in-out infinite;
  }

  .animate-progress-fill {
    animation: progress-fill 2s ease-out;
  }

  .animate-metric-update {
    animation: metric-update 0.6s ease-out;
  }

  .batch-card {
    transition: all 0.3s ease;
  }

  .batch-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
  }

  .processing-indicator {
    position: relative;
    overflow: hidden;
  }

  .processing-indicator::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    animation: shimmer 2s infinite;
  }

  @keyframes shimmer {
    0% {
      left: -100%;
    }
    100% {
      left: 100%;
    }
  }

  /* Workflow animations */
  @keyframes workflow-flow {
    0% { 
      transform: translateX(-100%);
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% { 
      transform: translateX(100%);
      opacity: 0;
    }
  }

  @keyframes step-highlight {
    0%, 100% { 
      background-color: white;
      border-color: rgb(229, 231, 235);
      transform: scale(1);
    }
    50% { 
      background-color: rgb(239, 246, 255);
      border-color: rgb(59, 130, 246);
      transform: scale(1.02);
    }
  }

  @keyframes data-flow {
    0% { 
      left: -10px;
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% { 
      left: calc(100% + 10px);
      opacity: 0;
    }
  }

  @keyframes progress-wave {
    0% { 
      background-position: -200% 50%;
    }
    100% { 
      background-position: 200% 50%;
    }
  }

  .animate-workflow-flow {
    animation: workflow-flow 3s ease-in-out infinite;
  }

  .animate-step-highlight {
    animation: step-highlight 2s ease-in-out infinite;
  }

  .animate-data-flow {
    animation: data-flow 4s linear infinite;
  }

  .animate-progress-wave {
    background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.5), transparent);
    background-size: 200% 100%;
    animation: progress-wave 2s linear infinite;
  }

  .workflow-step-active {
    animation: step-highlight 2s ease-in-out infinite;
    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
  }

  .data-particle {
    position: absolute;
    width: 4px;
    height: 4px;
    background: rgb(59, 130, 246);
    border-radius: 50%;
    animation: data-flow 4s linear infinite;
  }

  /* Auto Sync specific animations */
  @keyframes sync-glow {
    0%, 100% {
      box-shadow: 0 0 5px rgba(34, 197, 94, 0.3);
    }
    50% {
      box-shadow: 0 0 20px rgba(34, 197, 94, 0.6), 0 0 30px rgba(34, 197, 94, 0.4);
    }
  }

  @keyframes status-pulse {
    0%, 100% {
      transform: scale(1);
      opacity: 1;
    }
    50% {
      transform: scale(1.1);
      opacity: 0.8;
    }
  }

  @keyframes countdown-warning {
    0%, 100% {
      color: rgb(220, 38, 38);
      transform: scale(1);
    }
    50% {
      color: rgb(185, 28, 28);
      transform: scale(1.1);
    }
  }

  .animate-sync-glow {
    animation: sync-glow 2s ease-in-out infinite;
  }

  .animate-status-pulse {
    animation: status-pulse 1.5s ease-in-out infinite;
  }

  .animate-countdown-warning {
    animation: countdown-warning 0.8s ease-in-out infinite;
  }

  /* Enhanced table animations */
  @keyframes fade-in-right {
    0% {
      opacity: 0;
      transform: translateX(20px);
    }
    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes pulse-glow {
    0%, 100% {
      box-shadow: 0 0 5px rgba(139, 92, 246, 0.3);
    }
    50% {
      box-shadow: 0 0 20px rgba(139, 92, 246, 0.6), 0 0 30px rgba(139, 92, 246, 0.4);
    }
  }

  @keyframes row-highlight {
    0% {
      background-color: rgba(59, 130, 246, 0.1);
      transform: scale(1.02);
    }
    100% {
      background-color: transparent;
      transform: scale(1);
    }
  }

  @keyframes priority-pulse {
    0%, 100% {
      transform: scale(1);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    50% {
      transform: scale(1.05);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }
  }

  .animate-fade-in-right {
    animation: fade-in-right 0.3s ease-out;
  }

  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite;
  }

  .animate-row-highlight {
    animation: row-highlight 0.5s ease-out;
  }

  .animate-priority-pulse {
    animation: priority-pulse 1.5s ease-in-out infinite;
  }

  /* Critical row blinking */
  @keyframes critical-blink {
    0%, 100% {
      border-left-color: rgb(239, 68, 68);
      box-shadow: -2px 0 0 rgba(239, 68, 68, 0.3);
    }
    50% {
      border-left-color: rgb(220, 38, 38);
      box-shadow: -4px 0 8px rgba(239, 68, 68, 0.5);
    }
  }

  .animate-critical-blink {
    animation: critical-blink 1s ease-in-out infinite;
  }
}